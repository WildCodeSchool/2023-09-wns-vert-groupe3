version: "1.0"

services:
  backend:
    build: ./backend
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      retries: 10
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 4000:4000

  frontend:
    build: ./frontend
    env_file: .env.test
    healthcheck:
      test: "curl --fail --request GET --header 'content-type: application/json' --url 'http://localhost:3000/api/healthcheck' || exit 1"
      retries: 10
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 3000:3000

  e2e:
    build: ./e2e
    volumes:
      - ./e2e/playwright-report:/app/playwright-report
      - ./e2e/test-results:/app/test-results
    depends_on:
      frontend:
        condition: service_healthy

  imagesupload:
    build: ./imagesupload
    volumes:
      - ./imagesupload/uploads:/app/uploads
    ports:
      - 8000:8000

  adminer:
    image: adminer
    ports:
      - 8080:8080

  db:
    image: postgres
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: wildrent
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis
  redis-commander:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=redis
    ports:
      - "8081:8081"

volumes:
  pgdata:
